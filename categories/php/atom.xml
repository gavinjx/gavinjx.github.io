
<!DOCTYPE HTML>

<html>

<head>
	<meta charset="utf-8">
	<title>Category: php - 一个phper的博客</title>
	<meta name="author" content="Gavin">

	
	<meta name="description" content="Category: php">
	

  <!-- http://t.co/dKP3o1e -->
  <meta name="HandheldFriendly" content="True">
  <meta name="MobileOptimized" content="320">
  <meta name="viewport" content="width=device-width, initial-scale=1">

	<link href="" rel="alternate" title="一个phper的博客" type="application/atom+xml">
	
	<link rel="canonical" href="http://guojianxiang.com/categories/php/atom.xml">
	<link href="/favicon.png" rel="shortcut icon">
	<link href="/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css">
	<link href="/stylesheets/font-awesome.min.css" media="screen, projection" rel="stylesheet" type="text/css">
	<link href="/stylesheets/customer.css" media="screen, projection" rel="stylesheet" type="text/css">
	<!--[if lt IE 9]><script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
	<!-- <link href='http://fonts.googleapis.com/css?family=Nunito:400,300,700' rel='stylesheet' type='text/css'> -->
	<link href='/stylesheets/font-nunito.css' rel='stylesheet' type='text/css'>
	<!-- <script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script> -->
	<script src="/javascripts/jquery-1.7.2.min.js"></script>
	
  

</head>


<body>
	<div class="container">
		<div class="left-col">
			<div class="intrude-less">
			<header id="header" class="inner"><div class="profilepic">
	<img src="/images/profile.png" alt="Profile Picture" style="width: 160px;" />
	<!-- 
	<script src="/javascripts/md5.js"></script>
	<script type="text/javascript">
		$(function(){
			$('.profilepic').append("<img src='http://www.gravatar.com/avatar/" + MD5("guojianxiang@17yuea.com") + "?s=160' alt='Profile Picture' style='width: 160px;' />");
		});
	</script>
	 -->
</div>

<nav id="main-nav"><ul class="main">
    <li><a href="/">首页</a></li>
    <li><a href="/archives/">文章</a></li>
    <li><a href="/tags/">标签</a></li>
    <li><a href="/about/">关于我</a></li>
</ul>
</nav>
<nav id="sub-nav">
	<div class="social">
		
			<a class="email" href="mailto:guojianxiang@17yuea.com" title="Email">Email</a>
		
		
		
		
		
		
		
		
		
		
		
		
		
		
    	
    	
    	<!--  -->
	</div>
	
</nav>
</header>				
			</div>
		</div>	
		<div class="mid-col">
			
				
			
			<div class="mid-col-container">
				<div id="content" class="inner"><?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: php | 一个phper的博客]]></title>
  <link href="http://guojianxiang.com/categories/php/atom.xml" rel="self"/>
  <link href="http://guojianxiang.com/"/>
  <updated>2015-10-06T16:22:48+08:00</updated>
  <id>http://guojianxiang.com/</id>
  <author>
    <name><![CDATA[Gavin]]></name>
    <email><![CDATA[guojianxiang@17yuea.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[不同系统间的账户登录-Cookie跨域]]></title>
    <link href="http://guojianxiang.com/posts/2015-09-15-Diff_System_Account_Sync.html"/>
    <updated>2015-09-15T23:30:00+08:00</updated>
    <id>http://guojianxiang.com/posts/Diff_System_Account_Sync</id>
    <content type="html"><![CDATA[<blockquote><p>这两天在做：让两个系统间的帐号同步，其中涉及到跨域登录.</p></blockquote>

<!-- more -->


<p>背景是这样的：现在有两个系统SystemA和SystemB，要求在SystemA里可以注册SystemB的帐号，同时注册SystemB的时候需要依赖一个新的SystemA的帐号，并且要求在登录SystemB的时候同时登录SystemA的新帐号，并且在同一个浏览器内可以同时登录SystemA的初始帐号SA，SystemB的帐号SB和SystemA的新帐号SAN.</p>

<p>系统SystemA和SystemB都是采用Cookie记录登录操作的. 因此需要同时有SA, SB, SAN三者的Cookie.</p>

<p>解决方案是：使用三个域名（<code>abc.com</code>, <code>sb.abc.com</code>, <code>newsa.abc.com</code>）,其中SA访问<code>abc.com</code>进行登录, SAN访问<code>newsa.abc.com</code>进行登录, SB访问<code>sb.abc.com</code>进行登录. 其中<code>abc.com</code>和<code>newsa.abc.com</code>都指向SystemA, <code>sb.abc.com</code>指向SystemB. 这样SA登录的时候使用域<code>abc.com</code>的Cookie, SAN登录的时候使用<code>newsa.abc.com</code>的Cookie, SB登录的时候使用<code>sb.abc.com</code>的Cookie.</p>

<ul>
<li>跨域登录：其实很简单，首先使用SA登录<code>abc.com</code>，这时候已经种植了<code>abc.com</code>的Cookie, 然后用SB登录SystemB成功后种植了<code>sb.abc.com</code>的Cookie, 登录SystemB的时候动态生成一个script，该script的src指向<code>newsa.abc.com</code>的一个URL，该URL负责种植域<code>newsa.abc.com</code>下的Cookie（也就是采用动态载入异域的script解决跨域）.</li>
</ul>


<p>在<code>sb.abc.com</code>的登录页面ajax验证登录成功后执行下面的代码，动态引入<code>newsa.abc.com</code>的一个URL作为dom-script.</p>

<blockquote><p>你可能会问为什么不在<code>sb.abc.com</code>直接种植<code>newsa.abc.com</code>下的Cookie呢？</p>

<p>因为种不了，这属于跨域了. sb.abc.com可以种植sb.abc.com和abc.com下的Cookie, 无法在同级别的二级域名下种植Cookie.</p></blockquote>

<pre><code class="javascript">function loadScript(url, callback, callbackData){ 
    var script = document.createElement("script") 
    script.type = "text/javascript"; 
    if (script.readyState){ //IE 
        script.onreadystatechange = function(){ 
            if (script.readyState == "loaded" || 
                script.readyState == "complete"){ 
                script.onreadystatechange = null; 
                callback(callbackData); 
            } 
        }; 
    } else { //Others: Firefox, Safari, Chrome, and Opera 
        script.onload = function(){ 
            callback(callbackData);     
        }; 
    } 
    script.src = url; 
    document.body.appendChild(script); 
} 

loadScript('http://newsa.abc.com/project/setcookie', callback, callbackData) ;
</code></pre>

<p>嗯，还支持简单的回调 ~</p>

<ul>
<li>父域和子域Cookie的发送优先级</li>
</ul>


<p>没错，通过上面的异步引入<code>newsa.abc.com</code>一个种植Cookie的URL我们可以成功种植Cookie.</p>

<p>But, 当我们访问<code>newsa.abc.com</code>的时候发现浏览器在Header里发送的不是 <code>newsa.abc.com</code>的Cookie, 而是<code>abc.com</code>的Cookie. 即当父域和子域的Cookie同时存在时访问子域的URL，浏览器会优先发送父域的Cookie.</p>

<p>我们翻阅下种植Cookie的方法：</p>

<pre><code class="php">bool setcookie ( string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]] )
</code></pre>

<p><code>path</code> 就是我们解决问题的关键，由于项目正好不是在域名下的<code>'/'根目录</code>，所以对于子域的Cookie, 我们种植到项目目录下，父域的Cookie还是种植到<code>'/'根目录</code>, 假设项目目录为：<code>/project</code>，当访问<code>abc.com/project</code>下的URI时，发送的是<code>abc.com</code>的Cookie, 访问<code>newsa.abc.com/project</code>的URI时，发送的是<code>newsa.abc.com</code>的Cookie（因为我们设置了newsa.abc.com的Cookie的path，所以优先发送. ）</p>

<p>当然我们完全可以将<code>newsa.abc.com</code>替换成<code>def.com</code>，这样就不涉及子域，父域的Cookie共享问题了，但是我们有自己的业务考虑，使用<code>newsa.abc.com</code>对用户来说更能体现我们业务的紧密型.</p>

<p><br></p>

<p>总结下Cookie的跨域共享：</p>

<ol>
<li>在可读取的path下子域可以共享父域的Cookie，同时如果二者都存在，优先使用匹配当前path的Cookie.</li>
<li>不同的子域之间不能种植Cookie.</li>
<li>子域可以种植父域的Cookie.</li>
<li>父域不可以种植子域的Cookie.</li>
<li>父域不可以共享子域的Cookie.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP调试工具-Xdebug]]></title>
    <link href="http://guojianxiang.com/posts/2015-09-06-PHP_Debug_Tool-Xdebug.html"/>
    <updated>2015-09-06T23:00:00+08:00</updated>
    <id>http://guojianxiang.com/posts/PHP_Debug_Tool-Xdebug</id>
    <content type="html"><![CDATA[<blockquote><p>刚刚过完了三天的小长假，假期没事的时候整理了一下Xdebug的使用. 在测试服务器上装上也方便大家调试，提高大家的编码效率.</p></blockquote>

<!--more-->


<p>先解释下xdebug等工作原理：</p>

<p>进行xdebug调试，我们需要xdebug客户端和xdebug服务端，编译到php的就是服务端，客户端一般需要我们自己安装（像sublime text），或者一般的IDE都已经集成.</p>

<p>当我们进行xdebug调试时，首先客户端会监听一个端口，然后等待xdebug服务端连接，连接成功则进行通信.如下图所示：</p>

<p><img src="/images/php/xdebug/dbgp-setup.gif" alt="原理图" /></p>

<p>本机的IP(也就是IDE的IP)是10.0.1.42，监听的是本机的9000端口；
服务器的IP是10.0.1.2，连接的是80端口（web服务器默认端口）；</p>

<p>所以在<code>php.ini</code>里我们的配置应该是这样的：</p>

<pre><code class="bash">xdebug.remote_host=10.0.1.42
xdebug.remote_port=9000 
</code></pre>

<p>(PS：如果本机开着php并运行在9000端口上，应该换一个端口)</p>

<p>其中<code>remote_host</code> 就是xdebug服务器回调客户端的IP，也就是你进行xdebug调试的机器的IP</p>

<blockquote><p>但是当我们有很多人进行远程调试的时候，这个<code>remote_host</code>不能动态变化，这样就没法满足所有人的调试需求了？</p></blockquote>

<p>解决方法：在xdebug服务端有一个配置<code>xdebug.remote_connect_back</code>，这个值一旦设定为1就可以解决IP不是remote_host中值无法调试的问题，xdebug服务端可以从http请求的头部<code>$_SERVER['REMOTE_ADDR']</code>获取远程客户端的IP地址，如下图：</p>

<p><img src="/images/php/xdebug/dbgp-setup2.gif" alt="原理图" /></p>

<ul>
<li>好了，讲完原理，我们看下怎么编译服务端的：</li>
</ul>


<p>从官网wget编译文件，解压安装包</p>

<pre><code class="bash">[root@web4 software]# tar -zvxf xdebug-2.3.3.tgz
[root@web4 software]# cd xdebug-2.3.3
</code></pre>

<p>其中 <code>README</code> 中有关于安装的详细步骤，我的php安装路径为：/data/app/php</p>

<pre><code class="bash ">[root@web4 xdebug-2.3.3]# /data/app/php/bin/phpize
[root@web4 xdebug-2.3.3]# ./configure --enable-xdebug --with-php-config=/data/app/php/bin/php-config
make &amp;&amp; make install
</code></pre>

<p>配置php.ini</p>

<pre><code class="bash">[xdebug]
zend_extension="xdebug.so"
xdebug.auto_trace=true
xdebug.remote_enable=1
xdebug.remote_autostart=1
xdebug.remote_handler=dbgp
xdebug.remote_host=192.168.0.116
xdebug.remote_connect_back=1
xdebug.remote_port=9090
xdebug.idekey=web
xdebug.remote_log="/data/app/php/var/log/xdebug/xdebug.log"
xdebug.profiler_enable=1
xdebug.profiler_output_dir="/data/app/php/var/log/xdebug/xdebug-profiler"
;xdebug.dump_once = On  
;xdebug.dump_globals = On  
;xdebug.dump_undefined = On  
;xdebug.dump.SERVER = REQUEST_METHOD,REQUEST_URI,HTTP_USER_AGENT  
;xdebug.dump.REQUEST=*  
;xdebug.show_exception_trace = On  
;xdebug.show_local_vars = 1  
;xdebug.var_display_max_depth = 6 
</code></pre>

<ul>
<li>现在用sublime text3来说下怎么配置客户端</li>
</ul>


<p>安装 package <code>Xdebug Client</code></p>

<p>新建一个 project 并且执行 <code>项目=&gt;项目另存为</code>,并且已经成功设置 sftp</p>

<p>编辑存储后的project文件</p>

<pre><code class="json">{
    "folders":
    [
        {
            "path": "/MyLocalProjectPath/xdebug"
        }
    ],
    "settings": {
        "xdebug": {
                "url": "http://RemoteAddr/xdebug/index.php",
             "path_mapping": {  
                "/MyLocalProjectPath/xdebug/" : "/RemoteProjectLocation/xdebug/"  
            },
            "ide_key": "web",
            "super_globals": true,  
            "close_on_stop": true,  
            "port": 9090,
            "debug": true
        }
    }

}
</code></pre>

<p>新加入的代码如下：</p>

<pre><code class="json">"settings": {
    "xdebug": {
        "url": "http://RemoteAddr/xdebug/index.php",
         "path_mapping": {  
            "/MyLocalProjectPath/xdebug/" : "/RemoteProjectLocation/xdebug/"  
        },
        "ide_key": "web",
        "super_globals": true,  
        "close_on_stop": true,  
        "port": 9090,
        "debug": true
    }
}
</code></pre>

<p>如果是在本机进行调试，可以这样设置：</p>

<pre><code class="json">"settings": {
        "xdebug": {
             "url": "http://localhost/xdebug"
        }
    }
</code></pre>

<p><strong>记得重启php-fpm</strong></p>

<p>配置完毕！可以设置断点调试了~</p>

<hr />

<p>更新：</p>

<p>sublime text不支持多人调试的模式，经测试发现设置了<code>remote_connect_back=1</code>并注释掉<code>remote_host</code>后，sublime text无法与xdebug服务器进行通信，后来发现是需要 <a href="http://derickrethans.nl/debugging-with-multiple-users.html">DBGp代理</a>的.</p>

<p>一般的IDE是集成的，并且sublime text xdebug界面也不是很友好，如果需要debug的时候感觉phpstorm比较顺手.</p>

<p>对于 调试 Zendframework 也有了比较好的方法，由于Zendframework是做过路由的，因此没法进行 map 对应，之前看过一篇文章说的是在debug的时候做路由映射，我可能比较懒吧，想到了另一种方法：</p>

<p>我们只设置一个 debug 文件，需要对 某个action进行debug的时候只需要引入这个controller，new 一个 controller 类，然后调用对应的action即可，经过测试，在action里的变量可以在debug文件中进行debug时完全可以捕获！</p>

<p>[参考资料]</p>

<ol>
<li><p><a href="http://www.xdebug.org/docs/remote">官方文档</a></p></li>
<li><p><a href="https://packagecontrol.io/packages/Xdebug%20Client">SublimeTextXdebug</a></p></li>
<li><p><a href="http://www.jetbrains.com/phpstorm/help/configuring-xdebug.html">PhpStorm 9.0.0 Help/Configuring Xdebug</a></p></li>
<li><p><a href="http://blog.csdn.net/yaoyuan_difang/article/details/11656759">使用netbeans进行PHP团队开发和基于xdebug进行多人远程调试</a></p></li>
<li><p><a href="http://www.sitepoint.com/debugging-xdebug-sublime-text-3/">Debugging with Xdebug and Sublime Text 3</a></p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP调试工具-Strace]]></title>
    <link href="http://guojianxiang.com/posts/2015-09-06-PHP_Debug_Tool_Strace.html"/>
    <updated>2015-09-06T13:35:00+08:00</updated>
    <id>http://guojianxiang.com/posts/PHP_Debug_Tool_Strace</id>
    <content type="html"><![CDATA[<blockquote><p>昨天的时候，刚好看了下php调试方面的东西，正好看到了Strace，没想到今天就用上了.</p></blockquote>

<!--more-->


<p>今天，补单程序突然出现bug，有两笔订单掉单了却没有补单成功.</p>

<ul>
<li>首先，查了下 补单脚本</li>
</ul>


<pre><code class="bash">ps -ef|grep Patch 
xx      32687  3224  0 Aug20 ?        00:00:48 ...
</code></pre>

<p>补单脚本是守护进程控制的，但是看到这个时间点 <code>Aug20</code>，说明8.20日之后，脚本没有自动关闭，一直在执行. 所以就想看看是什么原因导致了脚本一直执行而没有退出.</p>

<ul>
<li>使用 <code>Strace</code> 命令</li>
</ul>


<pre><code class="bash">strace -p 32687

restart_syscall(&lt;... resuming interrupted call ...&gt;) = 0
poll([{fd=5, events=POLLIN|POLLPRI|POLLRDNORM|POLLRDBAND}], 1, 0) = 0 (Timeout)
poll([{fd=5, events=POLLIN|POLLPRI|POLLRDNORM|POLLRDBAND}], 1, 1000) = 0 (Timeout)
poll([{fd=5, events=POLLIN|POLLPRI|POLLRDNORM|POLLRDBAND}], 1, 0) = 0 (Timeout)
poll([{fd=5, events=POLLIN|POLLPRI|POLLRDNORM|POLLRDBAND}], 1, 1000) = 0 (Timeout)
poll([{fd=5, events=POLLIN|POLLPRI|POLLRDNORM|POLLRDBAND}], 1, 0) = 0 (Timeout)
poll([{fd=5, events=POLLIN|POLLPRI|POLLRDNORM|POLLRDBAND}], 1, 1000) = 0 (Timeout)
poll([{fd=5, events=POLLIN|POLLPRI|POLLRDNORM|POLLRDBAND}], 1, 0) = 0 (Timeout)
poll([{fd=5, events=POLLIN|POLLPRI|POLLRDNORM|POLLRDBAND}], 1, 1000) = 0 (Timeout)
poll([{fd=5, events=POLLIN|POLLPRI|POLLRDNORM|POLLRDBAND}], 1, 0) = 0 (Timeout)
poll([{fd=5, events=POLLIN|POLLPRI|POLLRDNORM|POLLRDBAND}], 1, 1000^C &lt;unfinished ...&gt;
</code></pre>

<p>可以看到，程序一直卡在curl超时上，然后检查了下补单相关的 curl 操作，发现大多数的 curl 没有加入连接超时时间，当DNS出现问题时，一直在等待服务器的回应，导致脚本调用的时候卡死.</p>

<p>总结一下：Strace 还有很多用法，比如查看一段时间内调用系统函数最多的统计等等，<code>strace -p 进程ID</code> 是查看该进程的系统函数调用情况，对于异步脚本很有用！ 很多strace的用法以后会再更新~</p>

<h2><br></h2>

<p>参考资料：</p>

<ol>
<li><a href="http://www.dewen.io/q/17309/php+curl%E8%B0%83%E7%94%A8%E7%9A%84%E6%97%B6%E5%80%99%E5%8D%A1%E6%AD%BB%EF%BC%8Cstrace%E7%BB%93%E6%9E%9C%E5%A6%82%E5%86%85">php curl调用的时候卡死，strace结果如内</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
</div>
			</div>
			<footer id="footer" class="inner">Copyright &copy; 2015

    Gavin
 <a target="_blank" href='http://www.miibeian.gov.cn/'>京ICP备15048929号-2</a>
<br>
Powered by <a href='https://github.com/shashankmehta/greyshade' target="_blank">GreyShade</a>

</footer>
		</div>
	</div>
	

<script type="text/javascript">
      var disqus_shortname = 'guojianxiang';
      
        
        var disqus_script = 'count.js';
      
    (function () {
      var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
      dsq.src = 'http://' + disqus_shortname + '.disqus.com/' + disqus_script;
      (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    }());
</script>










</body>
</html>
